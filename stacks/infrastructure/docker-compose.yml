version: "3.7"

services:

  # ================================================================================
  # API gateway
  # ================================================================================

  api-gateway:
    image: itbacep/api-gateway:${API_GATEWAY_VERSION}
    depends_on:
      - service-registry
    ports:
      - "8000:80"
    environment:
      eureka.client.serviceUrl.defaultZone: "http://service-registry:8761/eureka/"
      SPRING_PROFILES_ACTIVE: "prod"
      AUTHENTICATION_JWT_EXTERNAL_PUBLICKEY: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3Qold2jMzk/Ca3yYusjm9hxNp3EVBnzWD8GbTSfNPV+7z/+2f9LRSx2CztMCwgPciKC+7fWHzKcUgidLbPqPpKjqlbJQ0KKp7rPHOTmAaSaVX+OVSi00p7lbU1Hdepjdzt0LTwT3EBHTU0fGghTOQZffVtKzyg4Gth6iKEhIAHQztQ63JI5c6F1o4eGwJ8JrIHcjUewXO8HDBsU+3UGtiw8ixXVZ4sfGMrWkPylAC81gCWFfQhWggGz0O9xMEBD30C1EgBBZEN8C0Wg3EgDItiUrudqvxcgnCa1ssjEgSY+kYgMsDwcqpzO5PiISNd2JIc31miM99XaQkArYIidBTwIDAQAB
      AUTHENTICATION_JWT_INTERNAL_PRIVATEKEY: MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDdCiV3aMzOT8JrfJi6yOb2HE2ncRUGfNYPwZtNJ809X7vP/7Z/0tFLHYLO0wLCA9yIoL7t9YfMpxSCJ0ts+o+kqOqVslDQoqnus8c5OYBpJpVf45VKLTSnuVtTUd16mN3O3QtPBPcQEdNTR8aCFM5Bl99W0rPKDga2HqIoSEgAdDO1DrckjlzoXWjh4bAnwmsgdyNR7Bc7wcMGxT7dQa2LDyLFdVnix8YytaQ/KUALzWAJYV9CFaCAbPQ73EwQEPfQLUSAEFkQ3wLRaDcSAMi2JSu52q/FyCcJrWyyMSBJj6RiAywPByqnM7k+IhI13YkhzfWaIz31dpCQCtgiJ0FPAgMBAAECggEAa2DLdKevnqX2f7rmgw6nzHVRb/8qRJ2Oa9cUt7WXKbKBDXle0de7Hq92ZTzywQeZMbJNLlIxp0SfXN7z8DwEXexFEXWvdrserDwfkvgRHoPE2vE3C/LL+pK7/8zsN+tdDWoqXTe/Qco3C+T5VSYAULMTpxzyhDyuG/jjs4fxmm3xhi5OlUc4Ffh1MMdldkzp2fw2V58dJn1iwUyv/Up/VpxvIihqLcOXY6mRoXsAlFXlClG367QxuAyVZMzb6MtAg/tmTRQ8rCN9d3/piqIdtrF/2dI/B6QfeQNtqvY7o6Sq/lBvPqpv5hPeE6kX9J/nGCbfK95uR3Nh3o5jSWmm8QKBgQD3nx4JXZjZXO+9N04QnahZTWj819OVyg1VWBEb7obfDkhOqJEgQFBg7yadmtI/NwIFaEonJ3N6e5qimuFlEPGMhNFDxJvgxK9xKH1tig61RYP27NwkFvHLhiDMQyRx1t5VX37DdeTtvEOn/jDl8i41EJyGvnacvsk2XT4b1qIdFwKBgQDkhMcwem9Qu3gAfQ1UR011Srp1FjDxpqBGnSu6MPFuirSX/m+cyUgthZ2R1q3glZKQ1OaJihqx9jNeotHGcQeXXW+nFnlqxxk+Dt2LHurYJcAmynPdSqNBmtQlQl3h2tg84rpVtYuFkEs+GRY4fzilZqkk7G9VEx9tRadauDXQiQKBgQCtdNTBksMDYEq/rQIOOaI4DDXDCBy7DLKSWgKCInBvx712/DXM9cBYZq4SMOWeSpYr24Y2LziBUBxeU0gYV+ocmN1OL2dR5/VNuyNBnDf5Wxy51+nNjhUKkIZhD5dz9yP/gcl2ehtHPV3XTARMz3z2xxAeg0TrP+oLHv3m2k7tOQKBgAik2SAFUZadMMHb+RgaBl0McZciOsG5StDA+zl0xn0m9APX1QL6PieyqS4uD6+yGLQvyXSka7QVmwXWZNb7yYy5NRL976PRWiwVxd2QUtPQQb914wIY46oEoEe0hfaYH5vV+7RoRJnNxnrX2hZTAaKICpfh9agjLAonG1h8JVT5AoGBAIl3qIMVbPPmKRveZxJ+17RRveWu+vXD3PbxWxREQMBqFuk+pPemMMoFbSVevs33cOx7m7kZ9zsgs7JkLqjAx2RqL+JtCBgkFVbwd3QMkUS7mKPIljv/cUbUOcpVZmeV6C0UBHPgMyUltbHIhmVI+d4JafTCV384y0Cv0NcRFn1/


  # ================================================================================
  # Service Registry
  # ================================================================================

  service-registry:
    image: itbacep/service-registry:${SERVICE_REGISTRY_VERSION}
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: "prod"


  # ================================================================================
  # Tracing
  # ================================================================================

  zipkin:
    image: openzipkin/zipkin-slim:2.19.2
    ports:
      - 9411:9411


  # ================================================================================
  # Postgres Database
  # ================================================================================

  # Starts a container with a Postgres Server.
  postgres-server:
    image: postgres:10.8-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD}

  # Starts a container with that executes PSQL to configure the postgres server.
  postgres-client:
    image: postgres:10.8-alpine
    depends_on:
      - postgres-server
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD}
      PGPASSWORD: ${POSTGRES_SUPERUSER_PASSWORD}
    command: >
      bash -c \
      "
        until pg_isready -q -d postgres -h postgres-server -p 5432 -U postgres; 
        do
          echo \"Postgres is unavailable - Retrying in 1 second\";
          sleep 1;
        done
        dropdb ${LTI_SERVICE_POSTGRES_DATABASE} --if-exists \
          -h postgres-server -p 5432 -U postgres
        dropdb ${PLAYGROUND_SERVICE_POSTGRES_DATABASE} --if-exists \
          -h postgres-server -p 5432 -U postgres
        dropdb ${EVALUATIONS_SERVICE_POSTGRES_DATABASE} --if-exists \
          -h postgres-server -p 5432 -U postgres
        dropdb ${USERS_SERVICE_POSTGRES_DATABASE} --if-exists \
          -h postgres-server -p 5432 -U postgres
        dropuser ${LTI_SERVICE_POSTGRES_USER} --if-exists \
          -h postgres-server -p 5432 -U postgres
        dropuser ${PLAYGROUND_SERVICE_POSTGRES_USER} --if-exists \
          -h postgres-server -p 5432 -U postgres
        dropuser ${EVALUATIONS_SERVICE_POSTGRES_USER} --if-exists \
          -h postgres-server -p 5432 -U postgres
        dropuser ${USERS_SERVICE_POSTGRES_USER} --if-exists \
          -h postgres-server -p 5432 -U postgres
        psql postgres -h postgres-server -p 5432 -U postgres -c \
        \"
          CREATE USER \\\"${LTI_SERVICE_POSTGRES_USER}\\\"
            PASSWORD '${LTI_SERVICE_POSTGRES_PASSWORD}';
          CREATE USER \\\"${PLAYGROUND_SERVICE_POSTGRES_USER}\\\"
            PASSWORD '${PLAYGROUND_SERVICE_POSTGRES_PASSWORD}';
          CREATE USER \\\"${EVALUATIONS_SERVICE_POSTGRES_USER}\\\"
            PASSWORD '${EVALUATIONS_SERVICE_POSTGRES_PASSWORD}'; 
          CREATE USER \\\"${USERS_SERVICE_POSTGRES_USER}\\\"
            PASSWORD '${USERS_SERVICE_POSTGRES_PASSWORD}'; 
        \"
        createdb ${LTI_SERVICE_POSTGRES_DATABASE} -O ${LTI_SERVICE_POSTGRES_USER} \
          -h postgres-server -p 5432 -U postgres
        createdb ${PLAYGROUND_SERVICE_POSTGRES_DATABASE} -O ${PLAYGROUND_SERVICE_POSTGRES_USER} \
          -h postgres-server -p 5432 -U postgres
        createdb ${EVALUATIONS_SERVICE_POSTGRES_DATABASE} -O ${EVALUATIONS_SERVICE_POSTGRES_USER} \
          -h postgres-server -p 5432 -U postgres
        createdb ${USERS_SERVICE_POSTGRES_DATABASE} -O ${USERS_SERVICE_POSTGRES_USER} \
          -h postgres-server -p 5432 -U postgres
      "


  # ================================================================================
  # Kafka stuff
  # ================================================================================
  
  # Starts a container with a Kafka instance
  kafka:
    image: confluentinc/cp-kafka:5.1.3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_LOCALHOST://0.0.0.0:9092,LISTENER_INTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_LOCALHOST://localhost:9092,LISTENER_INTERNAL://kafka:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_LOCALHOST:PLAINTEXT,LISTENER_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_LOCALHOST
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # VER QUE ONDA LO DE LAS METRICS DE CONFLUENT

  # Starts a container with a Zookeeper instance
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
